% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc-diversity.R
\name{plot_diversity}
\alias{plot_diversity}
\title{Plot repertoire diversity}
\usage{
plot_diversity(
  input,
  cluster_col = NULL,
  method = abdiv::simpson,
  clonotype_col = "clonotype_id",
  plot_colors = NULL,
  plot_lvls = NULL,
  facet_rows = 1,
  ...
)
}
\arguments{
\item{input}{Single cell object or data.frame containing V(D)J data. If a
data.frame is provided, the cell barcodes should be stored as row names.}

\item{cluster_col}{meta.data column containing cluster IDs to use for
grouping cells when calculating clonotype abundance}

\item{method}{Function to use for calculating diversity. A named list of
functions can be passed to plot multiple diversity metrics,
e.g. list(simpson = abdiv::simpson, shannon = abdiv::shannon)}

\item{clonotype_col}{meta.data column containing clonotype IDs to use for
calculating clonotype abundance}

\item{plot_colors}{Character vector containing colors for plotting}

\item{plot_lvls}{Character vector containing levels for ordering}

\item{facet_rows}{The number of facet rows, use this argument if a list of
functions is passed to method}

\item{...}{Additional arguments to pass to ggplot2, e.g. color, fill, size,
linetype, etc.}
}
\value{
ggplot object
}
\description{
Plot repertoire diversity
}
\examples{
# Plot diversity using all cells
plot_diversity(vdj_so)

# Specify method to use for calculating repertoire diversity
plot_diversity(
  vdj_so,
  method = abdiv::shannon
)

# Plot diversity separately for each cell cluster
plot_diversity(
  vdj_so,
  cluster_col = "orig.ident"
)

# Plot multiple diversity metrics
plot_diversity(
  vdj_so,
  cluster_col = "orig.ident",
  method = list(simpson = abdiv::simpson, shannon = abdiv::shannon)
)

# Specify colors to use for each cell cluster
plot_diversity(
  vdj_so,
  cluster_col = "orig.ident",
  plot_colors = c(avid_2 = "green", avid_1 = "purple")
)

# Specify order to use for plotting cell clusters
plot_diversity(
  vdj_so,
  cluster_col = "orig.ident",
  plot_lvls = c("avid_2", "avid_1")
)

# Specify how to organize facets when plotting multiple metrics
plot_diversity(
  vdj_so,
  method = list(simpson = abdiv::simpson, shannon = abdiv::shannon),
  facet_rows = 2
)

}
