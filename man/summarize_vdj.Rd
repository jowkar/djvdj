% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutate-vdj.R
\name{summarize_vdj}
\alias{summarize_vdj}
\title{Summarize V(D)J data for each cell}
\usage{
summarize_vdj(
  input,
  vdj_cols,
  fn = NULL,
  ...,
  chain = NULL,
  chain_col = "chains",
  sep = ";",
  col_names = "{.col}",
  return_df = FALSE
)
}
\arguments{
\item{input}{Single cell object or data.frame containing V(D)J data. If a
data.frame is provided, the cell barcodes should be stored as row names.}

\item{vdj_cols}{meta.data column(s) containing V(D)J data to summarize for
each cell}

\item{fn}{Function to apply to each selected column, possible values can be
either a function, e.g. mean, or a purrr-style lambda, e.g. ~ mean(.x,
na.rm = TRUE). If NULL, the mean will be calculated for numeric values,
non-numeric columns will be combined into a single string.}

\item{...}{Additional arguments to pass to fn}

\item{chain}{Chain to use for summarizing V(D)J data}

\item{chain_col}{meta.data column(s) containing chains for each cell}

\item{sep}{Separator used for storing per cell V(D)J data}

\item{col_names}{A glue specification that describes how to name the output
columns, use \{.col\} to refer to the original column name. If col_names is
NULL, the original column names will be used.}

\item{return_df}{Return results as a data.frame. If FALSE, results will be
added to the input object.}
}
\value{
Object containing V(D)J data summarized for each cell
}
\description{
Summarize per-chain values for each cell using a function or purrr-style
lambda. This is useful for plotting or filtering cells based on the V(D)J
meta.data.
}
\examples{
# Summarize numeric columns
# by default the mean will be calculated for numeric columns
summarize_vdj(
  vdj_so,
  vdj_cols = c("n_deletion", "n_insertion")
)

# Specifying a different summary function
# this calculates the median number of insertions and deletions for each
# cell
summarize_vdj(
  vdj_so,
  vdj_cols = c("n_deletion", "n_insertion"),
  fn = stats::median
)

# Summarize values for a specific chain
summarize_vdj(
  vdj_so,
  vdj_cols = c("n_deletion", "n_insertion"),
  chain = "IGK"
)

# Specifying new names for summarized columns
# use {.col} to refer to the original column name
summarize_vdj(
  vdj_so,
  vdj_cols = c("n_deletion", "n_insertion"),
  fn = stats::median,
  col_names = "median_{.col}"
)

# Return a data.frame instead of adding the results to the input object
summarize_vdj(
  vdj_so,
  vdj_cols = c("n_deletion", "n_insertion"),
  return_df = TRUE
)

# Using a lambda function to summarize values
# use '.x' to refer to values in the column
# this creates a new column showing the unique chains for each cell
summarize_vdj(
  vdj_so,
  vdj_cols = "chains",
  fn = ~ paste0(unique(.x), collapse = "_"),
  col_names = "unique_chains"
)

# Creating an index column to use for filtering/plotting
# this creates a column indicating which cells have no insertions
# the V(D)J data can be filtered based on this new column
new_so <- summarize_vdj(
  vdj_so,
  vdj_cols = "n_insertion",
  fn = ~ all(.x == 0),
  col_names = "no_insertions"
)

filter_vdj(
  new_so,
  filt = no_insertions
)

}
